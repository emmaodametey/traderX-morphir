{"formatVersion":3,"distribution":["Library",[["trader","x"],["trade","service"]],[],{"modules":[[[["order"]],{"access":"Public","value":{"types":[[["buy","request"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Record",{},[{"name":["quantity"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]},{"name":["product"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["id"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["request","price"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]]}]]]}}],[["buy","response"],{"access":"Public","value":{"doc":" Union types are great for modeling results too. Here we have 3 different types of results.\nAn order can be:\n  * Accepted if everything goes well, or\n  * Invalid if a validation rule was violated, or\n  * Rejected if the order was valid but we didn't accpt it for business reasons.\n","value":["CustomTypeDefinition",[],{"access":"Public","value":[[["buy","accepted"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],[["arg","2"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["product"]],[]]],[["arg","3"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],[["arg","4"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]]],[["buy","invalid"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],[["arg","2"],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]]]]],[["buy","rejected"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],[["arg","2"],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]]]]]]}]}}],[["deal"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Record",{},[{"name":["id"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["product"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["product"]],[]]},{"name":["price"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]},{"name":["quantity"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]}]]]}}],[["i","d"],{"access":"Public","value":{"doc":" Type aliases are great when you want to defer a decision about the structure of a value.\nIn this example we knew that we needed an order request ID and that we might need to structure \nit in a certain way in the future but for now we just want to model it as a string. If we just\nused a string in our models we would have lost thhis information and changing to a different \ntype would also require changes in many places. With an alias you can change the type right here \nand will be applied everywhere where it's used.\n","value":["TypeAliasDefinition",[],["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]]}}],[["order","price"],{"access":"Public","value":{"doc":" Order price can either be market or limit. \n  * Market will take the current market price at the time the order is processed.\n  * Limit takes the specific price that is supplied. \n\nThis kind OR relationship between types is difficult to express in most OOP languages.\nEnums come close to it but if the types are different structurally an enum cannot model \nthat. In this example one type has no extra info while the other has a Price value \nassociated to it. This happens very frequently in our domain and not having a direct way \nto model it creates a lot of friction.  \n","value":["CustomTypeDefinition",[],{"access":"Public","value":[[["limit"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]]],[["market"],[]]]}]}}],[["price"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["float"]],[]]]}}],[["product"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]]}}],[["quantity"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]]]}}],[["reject","reason"],{"access":"Public","value":{"doc":" In this example we thought that differentiating validation errors from rejections due to business\nreasons is usefult so we captured them in a separate type.\n","value":["CustomTypeDefinition",[],{"access":"Public","value":[[["disagreeable","price"],[]],[["insufficient","inventory"],[]]]}]}}],[["request"],{"access":"Public","value":{"doc":" An order request is modeled using a record type which is almost like a POJO but it's immutable\nand automatically defines equality by comparing all fields. This makes records ideal for messaging.\n","value":["TypeAliasDefinition",[["a"]],["ExtensibleRecord",{},["a"],[{"name":["id"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["request","price"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]]}]]]}}],[["sell","request"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["request"]],[["Record",{},[{"name":["deal","id"],"tpe":["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]}]]]]]}}],[["sell","response"],{"access":"Public","value":{"doc":"","value":["CustomTypeDefinition",[],{"access":"Public","value":[[["sell","accepted"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],[["arg","2"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]]]]}]}}],[["violations"],{"access":"Public","value":{"doc":" Union types are great for modeling the different kind of violations that we can capture in our \nvalidation rules. Just as before we do more than just enums since the different violations are structurally\ndifferent.\n","value":["CustomTypeDefinition",[],{"access":"Public","value":[[["invalid","price"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]]],[["invalid","quantity"],[[["arg","1"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]]]]}]}}]],"values":[[["acceptability"],{"access":"Public","value":{"doc":" This is where the business decision is made. Similar to validation lack of rejections means that\nthe order request was accepted.\n","value":{"inputTypes":[[["request"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]]],[["market","price"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],[["available","inventory"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],"body":["LetDefinition",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["availability","check"],{"inputTypes":[],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Variable",{},["t","9"]]]],"body":["IfThenElse",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],[[["morphir"],["s","d","k"]],[["basics"]],["less","than"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["available","inventory"]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["request"]],["quantity"]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],[["Constructor",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["insufficient","inventory"]]]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],[]]]},["LetDefinition",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["price","check"],{"inputTypes":[],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Variable",{},["t","17"]]]],"body":["IfThenElse",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],[[["morphir"],["s","d","k"]],[["basics"]],["less","than"]]],["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]],[[["trader","x"],["trade","service"]],[["order"]],["lockin","price"]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["request"]],["request","price"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["market","price"]]]],["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]],[[["morphir"],["s","d","k"]],[["basics"]],["multiply"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["market","price"]]],["Literal",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["float"]],[]],["FloatLiteral",0.9]]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],[["Constructor",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["disagreeable","price"]]]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],[]]]},["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["Apply",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]]],["Reference",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]]]],[[["morphir"],["s","d","k"]],[["basics"]],["append"]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["availability","check"]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]],["price","check"]]]]]}}}],[["availability"],{"access":"Public","value":{"doc":" Calculate the currently available inventory based on start of day position minus sum of previous buys.\nThis is the kind of important business logic we want to preserve across technical implementations.\n","value":{"inputTypes":[[["start","of","day","position"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]],[["buys"],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]]]]],"outputType":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],"body":["LetDefinition",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["sum","of","buys"],{"inputTypes":[],"outputType":["Variable",{},["t","13"]],"body":["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]],[[["morphir"],["s","d","k"]],[["list"]],["sum"]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]],["Apply",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]]],["Reference",["Function",{},["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]],["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]]]],[[["morphir"],["s","d","k"]],[["list"]],["map"]]],["Lambda",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]],["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]],["response"]],["PatternMatch",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],["response"]],[[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["buy","accepted"]],[["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["product"]],[]]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]],["quantity"]]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["quantity"]]],[["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]],["Literal",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["WholeNumberLiteral",0]]]]]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]]],["buys"]]]]},["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]],[[["morphir"],["s","d","k"]],[["basics"]],["subtract"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["start","of","day","position"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["sum","of","buys"]]]]}}}],[["get","id"],{"access":"Public","value":{"doc":"","value":{"inputTypes":[[["response"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]]]],"outputType":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],"body":["PatternMatch",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],["response"]],[[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["buy","accepted"]],[["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],["id"]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["product"]],[]]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]]]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["id"]]],[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["buy","invalid"]],[["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],["id"]],["WildcardPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]]]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["id"]]],[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","response"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["buy","rejected"]],[["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]],["id"]],["WildcardPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["reject","reason"]],[]]]]]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["id"]]]]]}}}],[["lockin","price"],{"access":"Public","value":{"doc":" This is where modeling request price as a union pays off. We don't have to handle invalid states\nlike a limit request without a price or a market request with a price defined. We can focus on handling\nrequests that are valid from a business perspective which means that there is less noise and the code\nbecomes more readable.\n","value":{"inputTypes":[[["request","price"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]]],[["market","price"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]],"outputType":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],"body":["PatternMatch",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["request","price"]],[[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["market"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["market","price"]]],[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["limit"]],[["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["p"]]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["p"]]]]]}}}],[["process","sell"],{"access":"Public","value":{"doc":" Finally we process the request request and return a result. This is a simplified example\nso we didn't pass in the current state of the system but in a real implementation we would \ndo that to make the code predictable. \n","value":{"inputTypes":[[["request"],["ExtensibleRecord",{},["t","16"],[{"name":["id"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["request","price"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]]}]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["sell","request"]],[]]],[["market","price"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]],"outputType":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["sell","response"]],[]],"body":["LetDefinition",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["sell","response"]],[]],["lock","price"],{"inputTypes":[],"outputType":["Variable",{},["t","7"]],"body":["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]]],[[["trader","x"],["trade","service"]],[["order"]],["lockin","price"]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["Variable",["ExtensibleRecord",{},["t","16"],[{"name":["id"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["request","price"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]]}]],["request"]],["request","price"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["market","price"]]]},["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["sell","response"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["sell","response"]],[]]],["Constructor",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["sell","response"]],[]]]],[[["trader","x"],["trade","service"]],[["order"]],["sell","accepted"]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]],["Variable",["ExtensibleRecord",{},["t","16"],[{"name":["id"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["i","d"]],[]]},{"name":["request","price"],"tpe":["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]]}]],["request"]],["id"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["lock","price"]]]]}}}],[["validate"],{"access":"Public","value":{"doc":" Validation takes in the order request and retuns a list of violations. An empty list of violations \nmeans the order request is valid.\n","value":{"inputTypes":[[["request"],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]]]],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],"body":["LetDefinition",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["price","check"],{"inputTypes":[],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Variable",{},["t","11"]]]],"body":["PatternMatch",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["request"]],["request","price"]],[[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["market"]],[]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],[]]],[["ConstructorPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["order","price"]],[]],[[["trader","x"],["trade","service"]],[["order"]],["limit"]],[["AsPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["WildcardPattern",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]]],["p"]]]],["IfThenElse",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],[[["morphir"],["s","d","k"]],[["basics"]],["less","than"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["p"]]],["Literal",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["FloatLiteral",0]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],[["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]],["Constructor",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]],[[["trader","x"],["trade","service"]],[["order"]],["invalid","price"]]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["price"]],[]],["p"]]]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],[]]]]]]},["LetDefinition",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["quantity","check"],{"inputTypes":[],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Variable",{},["t","9"]]]],"body":["IfThenElse",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Apply",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]],["Reference",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],[[["morphir"],["s","d","k"]],[["basics"]],["less","than","or","equal"]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["request"]],["quantity"]]],["Literal",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["WholeNumberLiteral",0]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],[["Apply",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]],["Constructor",["Function",{},["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]],[[["trader","x"],["trade","service"]],[["order"]],["invalid","quantity"]]],["Field",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["quantity"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["buy","request"]],[]],["request"]],["quantity"]]]]],["List",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],[]]]},["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Apply",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]]],["Reference",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]]]],[[["morphir"],["s","d","k"]],[["basics"]],["append"]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["price","check"]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["list"]],["list"]],[["Reference",{},[[["trader","x"],["trade","service"]],[["order"]],["violations"]],[]]]],["quantity","check"]]]]]}}}]],"doc":" Finally we process the request request and return a result. This is a simplified example\nso we didn't pass in the current state of the system but in a real implementation we would \ndo that to make the code predictable. "}}],[[["trade","order","controller"]],{"access":"Public","value":{"types":[[["trade","order"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Record",{},[{"name":["id"],"tpe":["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]},{"name":["security"],"tpe":["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]},{"name":["quantity"],"tpe":["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]]},{"name":["account","id"],"tpe":["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]]},{"name":["side"],"tpe":["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]}]]]}}],[["url"],{"access":"Public","value":{"doc":"","value":["TypeAliasDefinition",[],["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]]}}]],"values":[[["create","trade","order"],{"access":"Public","value":{"doc":"","value":{"inputTypes":[[["trade","order"],["Reference",{},[[["trader","x"],["trade","service"]],[["trade","order","controller"]],["trade","order"]],[]],["Reference",{},[[["trader","x"],["trade","service"]],[["trade","order","controller"]],["trade","order"]],[]]]],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],"body":["LetDefinition",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["valid","ticker"],{"inputTypes":[],"outputType":["Variable",{},["t","5"]],"body":["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Reference",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],[[["trader","x"],["trade","service"]],[["trade","order","controller"]],["validate","ticker"]]],["Field",["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["trade","order","controller"]],["trade","order"]],[]],["trade","order"]],["security"]]]},["PatternMatch",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["valid","ticker"]],[[["ConstructorPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],[[["morphir"],["s","d","k"]],[["result"]],["err"]],[["WildcardPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["valid","ticker"]]],[["ConstructorPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],[[["morphir"],["s","d","k"]],[["result"]],["ok"]],[["WildcardPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Reference",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],[[["trader","x"],["trade","service"]],[["trade","order","controller"]],["validate","account"]]],["Field",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]],["Variable",["Reference",{},[[["trader","x"],["trade","service"]],[["trade","order","controller"]],["trade","order"]],[]],["trade","order"]],["account","id"]]]]]]]}}}],[["validate","account"],{"access":"Public","value":{"doc":"","value":{"inputTypes":[[["account","id"],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]]]],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],"body":["PatternMatch",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]],["account","id"]],[[["LiteralPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]],["WholeNumberLiteral",0]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Constructor",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],[[["morphir"],["s","d","k"]],[["result"]],["ok"]]],["Literal",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["BoolLiteral",true]]]],[["WildcardPattern",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["int"]],[]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Constructor",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],[[["morphir"],["s","d","k"]],[["result"]],["err"]]],["Literal",["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["StringLiteral","Resource not found in Account service"]]]]]]}}}],[["validate","ticker"],{"access":"Public","value":{"doc":"","value":{"inputTypes":[[["ticker"],["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]]]],"outputType":["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],"body":["IfThenElse",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Reference",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]],[[["morphir"],["s","d","k"]],[["string"]],["is","empty"]]],["Variable",["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["ticker"]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Constructor",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],[[["morphir"],["s","d","k"]],[["result"]],["err"]]],["Literal",["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["StringLiteral","Invalid"]]],["Apply",["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]],["Constructor",["Function",{},["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["result"]],["result"]],[["Reference",{},[[["morphir"],["s","d","k"]],[["string"]],["string"]],[]],["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]]]]],[[["morphir"],["s","d","k"]],[["result"]],["ok"]]],["Literal",["Reference",{},[[["morphir"],["s","d","k"]],[["basics"]],["bool"]],[]],["BoolLiteral",true]]]]}}}]],"doc":null}}]]}]}